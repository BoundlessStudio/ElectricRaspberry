// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectricRaspberry.Migrations
{
    [DbContext(typeof(FeedsContext))]
    [Migration("20230622024012_InitialImport")]
    partial class InitialImport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("AuthorModel", b =>
                {
                    b.Property<string>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mention")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors", (string)null);
                });

            modelBuilder.Entity("CommentModel", b =>
                {
                    b.Property<string>("CommentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<string>("FeedId")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("CommentId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("FeedId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("FeedModel", b =>
                {
                    b.Property<string>("FeedId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerId")
                        .HasColumnType("TEXT");

                    b.HasKey("FeedId");

                    b.ToTable("Feeds", (string)null);
                });

            modelBuilder.Entity("CommentModel", b =>
                {
                    b.HasOne("AuthorModel", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("FeedModel", "Feed")
                        .WithMany()
                        .HasForeignKey("FeedId");

                    b.Navigation("Author");

                    b.Navigation("Feed");
                });
#pragma warning restore 612, 618
        }
    }
}
